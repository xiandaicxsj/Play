#include"global.h"
u16 KERNEL_CODE=0x0010;
extern int print(char *s);
void init_idt();
void default_handler1();
void set_idt(int num, void (*func)(),u8 type);
void 	devide_error();
void	single_step_exception();
void	nmi();
void	breakpoint_exception();
void	overflow();
void	bounds_check();
void	inval_opcode();
void	copr_not_available();
void	double_fault();
void	copr_seg_overrun();
void	inval_tss();
void	segment_not_present();
void	stack_exception();
void	general_protection();
void	page_fault();
void	copr_error();

void init_paging()
{
		return ;
}
void init()
{
	print("kernel begin");
	init_idt();
	init_paging();
	while(1);
}
void init_idt()
{
	idt_dec=(gate_dec*)((void *)_idt);
//	for (int num=0;num<IDT_NUM;num++)
//		set_idt(num,(u32)default_handler1,DA_386IGate);
	set_idt(DIEVIDE_ERROR,devide_error,DA_386IGate);
	set_idt(DEBUG,single_step_exception,DA_386IGATE);
	set_idt(NMI,nmi,DA_386IGATE);
	set_idt(BREAKPOINT,breakpoint_exception,DA_386IGATE);
	set_idt(OVERFLOW,overflow,DA_386IGATE);
	set_idt(BOUND_RANGE_EXCEDD,bounds_check,DA_386IGATE);
	set_idt(INVALID_OP,inval_opcode,DA_386IGATE);
	set_idt(DEVICE_NOT_AVAL,copr_not_available,DA_386IGATE);
	set_idt(DOUBL_FAULT,double_fault,DA_386IGATE);
	set_idt(COP_SEGMENT,copr_seg_overrun,DA_386IGATE);
	set_idt(IVALID_TSS,inval_tss,DA_386IGATE);
	set_idt(SEGMENT_NOT_PRESETNT,segment_not_present,DA_386IGATE);
	set_idt(STACK_FAULT,stack_exception,DA_386IGATE);
	set_idt(GENERAL_FAULT,general_protection,DA_386IGATE);
	set_idt(PAGE_FAULT,page_fault,DA_386IGATE);
	//下面需要测试的是如果在c语言中实现了一个函数是否可以这样的方式写入到idt中

}
void set_idt(int vector,void (*func)(),u8 type)
{
		u32 handler=(u32)func;
		gate_dec* sidt=&(idt_dec[vector]);
		sidt->low_off=handler&0xffff;
		sidt->high_off=(handler>>16)&0xffff;
		sidt->base_sel=KERNEL_CODE;
		sidt->type=type;
		sidt->attr=0x00;//这里设置的是后
}

void default_handler1()
{
	print("this is default handler\n");
}



